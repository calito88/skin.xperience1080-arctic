<includes>
	<include name="SimpleHome-Clock">
        <control type="group">
            <animation type="WindowOpen" condition="Window.IsActive(loginscreen) | [Window.IsActive(startup) + !Window.Previous(loginscreen)] | Window.Previous(fullscreenvideo) | Window.Previous(visualisation) | Window.Previous(slideshow)" reversible="false">
                <effect type="fade" start="0" end="100" time="300" tween="sine" easing="inout" />
            </animation>
            <animation type="WindowClose" condition="Window.Next(fullscreenvideo) | Window.Next(visualisation) | Window.Next(slideshow)" reversible="false">
                <effect type="fade" start="100" end="0" time="300" tween="sine" easing="inout" />
            </animation>
            <control type="group">
				<animation effect="slide" end="0" start="0,500" time="250" condition="Window.IsVisible(home) + StringCompare(Skin.String(homescreen.style),simple)">WindowOpen</animation>
				<animation effect="slide" end="0" start="0,500" time="250" condition="Window.IsVisible(home) + StringCompare(Skin.String(homescreen.style),simple)">Visible</animation>
                <animation effect="slide" end="-65" time="300" tween="sine" easing="inout" condition="Window.IsActive(mutebug)">Conditional</animation>
                <animation effect="slide" end="-60" time="300" tween="sine" easing="inout" condition="PVR.IsRecording | PVR.HasTimer">Conditional</animation>
                <control type="image">
                    <description>Small weather</description>
                    <posx>174r</posx>
                    <posy>950</posy>
                    <width>100</width>
                    <height>100</height>
                    <texture>weather/small/$INFO[Weather.FanartCode].png</texture>
                    <visible>Weather.IsFetched + ![stringcompare(Weather.FanartCode,na) + substring(Weather.Conditions,/)]</visible>
                    <include>visiblehidefadeinfo</include>
                    <colordiffuse>mod-infotags</colordiffuse>
                </control>
                <control type="label">
                    <description>Clock label</description>
                    <posx>165r</posx>
                    <posy>953</posy>
                    <width>180</width>
                    <height>100</height>
                    <label>$INFO[System.Time]</label>
                    <font>Font-Alaska-S29-BL</font>
                    <textcolor>mod-infotags</textcolor>
                    <shadowcolor>mod-shadow</shadowcolor>
                    <align>right</align>
                    <scroll>false</scroll>
                    <animation effect="slide" end="60" time="300" tween="sine" easing="inout" condition="!Weather.IsFetched | [stringcompare(Weather.FanartCode,na) + substring(Weather.Conditions,/)]">Conditional</animation>
                </control>
            </control>
            <control type="group">
                <visible>PVR.IsRecording</visible>
                <animation effect="slide" end="-60" time="300" tween="sine" easing="inout" condition="Window.IsActive(mutebug)">Conditional</animation>
                <include>visiblehidefadeinfo</include>
                <control type="image">
                    <posx>174r</posx>
                    <posy>950</posy>
                    <width>100</width>
                    <height>100</height>
                    <texture>windows/pvr/recording-info.png</texture>
                </control>
                <control type="image">
                    <posx>174r</posx>
                    <posy>950</posy>
                    <width>100</width>
                    <height>100</height>
                    <texture>windows/pvr/recording-info-pulse.png</texture>
                    <animation effect="fade" start="65" end="100" time="750" tween="sine" easing="in" pulse="true" condition="true">Conditional</animation>
                </control>
            </control>
            <control type="image">
                <posx>174r</posx>
                <posy>950</posy>
                <width>100</width>
                <height>100</height>
                <texture>windows/pvr/timer.png</texture>
                <animation effect="slide" end="-60" time="300" tween="sine" easing="inout" condition="Window.IsActive(mutebug)">Conditional</animation>
                <include>visiblehidefadeinfo</include>
                <visible>!PVR.IsRecording + PVR.HasTimer</visible>
                <colordiffuse>mod-infotags</colordiffuse>
            </control>
            <control type="image">
                <description>Mute</description>
                <posx>174r</posx>
                <posy>950</posy>
                <width>100</width>
                <height>100</height>
                <texture>overlays/volume/muted.png</texture>
                <include>visiblehidefadeinfo</include>
                <visible>Window.IsActive(mutebug)</visible>
                <colordiffuse>mod-infotags-d</colordiffuse>
            </control>
        </control>
    </include>
    <include name="Common-Clock">
        <control type="group">
            <animation type="WindowOpen" condition="Window.IsActive(loginscreen) | [Window.IsActive(startup) + !Window.Previous(loginscreen)] | Window.Previous(fullscreenvideo) | Window.Previous(visualisation) | Window.Previous(slideshow)" reversible="false">
                <effect type="fade" start="0" end="100" time="300" tween="sine" easing="inout" />
            </animation>
            <animation type="WindowClose" condition="Window.Next(fullscreenvideo) | Window.Next(visualisation) | Window.Next(slideshow)" reversible="false">
                <effect type="fade" start="100" end="0" time="300" tween="sine" easing="inout" />
            </animation>
            <control type="group">
				<animation effect="slide" end="0" start="0,500" time="250" condition="Window.IsVisible(home) + StringCompare(Skin.String(homescreen.style),simple)">WindowOpen</animation>
				<animation effect="slide" end="0" start="0,500" time="250" condition="Window.IsVisible(home) + StringCompare(Skin.String(homescreen.style),simple)">Visible</animation>
                <animation effect="slide" end="-65" time="300" tween="sine" easing="inout" condition="Window.IsActive(mutebug)">Conditional</animation>
                <animation effect="slide" end="-60" time="300" tween="sine" easing="inout" condition="PVR.IsRecording | PVR.HasTimer">Conditional</animation>
                <control type="image">
                    <description>Small weather</description>
                    <posx>174r</posx>
                    <posy>950</posy>
                    <width>100</width>
                    <height>100</height>
                    <texture>weather/small/$INFO[Weather.FanartCode].png</texture>
                    <visible>Weather.IsFetched + ![stringcompare(Weather.FanartCode,na) + substring(Weather.Conditions,/)]</visible>
                    <include>visiblehidefadeinfo</include>
                    <colordiffuse>Mod_Tags</colordiffuse>
                </control>
                <control type="label">
                    <description>Clock label</description>
                    <posx>165r</posx>
                    <posy>953</posy>
                    <width>180</width>
                    <height>100</height>
                    <label>$INFO[System.Time]</label>
                    <font>Font-Alaska-S29-BL</font>
                    <textcolor>Mod_Tags</textcolor>
                    <shadowcolor>Mod_Tags_Shadow</shadowcolor>
                    <align>right</align>
                    <scroll>false</scroll>
                    <animation effect="slide" end="60" time="300" tween="sine" easing="inout" condition="!Weather.IsFetched | [stringcompare(Weather.FanartCode,na) + substring(Weather.Conditions,/)]">Conditional</animation>
                </control>
            </control>
            <control type="group">
                <visible>PVR.IsRecording</visible>
                <animation effect="slide" end="-60" time="300" tween="sine" easing="inout" condition="Window.IsActive(mutebug)">Conditional</animation>
                <include>visiblehidefadeinfo</include>
                <control type="image">
                    <posx>174r</posx>
                    <posy>950</posy>
                    <width>100</width>
                    <height>100</height>
                    <texture>windows/pvr/recording-info.png</texture>
                </control>
                <control type="image">
                    <posx>174r</posx>
                    <posy>950</posy>
                    <width>100</width>
                    <height>100</height>
                    <texture>windows/pvr/recording-info-pulse.png</texture>
                    <animation effect="fade" start="65" end="100" time="750" tween="sine" easing="in" pulse="true" condition="true">Conditional</animation>
                </control>
            </control>
            <control type="image">
                <posx>174r</posx>
                <posy>950</posy>
                <width>100</width>
                <height>100</height>
                <texture>windows/pvr/timer.png</texture>
                <animation effect="slide" end="-60" time="300" tween="sine" easing="inout" condition="Window.IsActive(mutebug)">Conditional</animation>
                <include>visiblehidefadeinfo</include>
                <visible>!PVR.IsRecording + PVR.HasTimer</visible>
                <colordiffuse>Mod_Tags</colordiffuse>
            </control>
            <control type="image">
                <description>Mute</description>
                <posx>174r</posx>
                <posy>950</posy>
                <width>100</width>
                <height>100</height>
                <texture>overlays/volume/muted.png</texture>
                <include>visiblehidefadeinfo</include>
                <visible>Window.IsActive(mutebug)</visible>
                <colordiffuse>Mod_Tags_Dark</colordiffuse>
            </control>
        </control>
    </include>
    
    <variable name="OptionsButtonTexture">
        <value condition="Window.IsActive(programs) + [Control.IsVisible(52) | Control.IsVisible(53) | Control.IsVisible(60) | Control.IsVisible(61) | [Control.IsVisible(50) + substring(Container.FolderPath,plugin://plugin.program.advanced.launcher/,left)]]">buttons/options-right.png</value>
        <value condition="Window.IsActive(programs) + [Control.IsVisible(56) | Control.IsVisible(57) | Control.IsVisible(58)]">buttons/options-down.png</value>
        <value condition="Control.IsVisible(50) | Control.IsVisible(52) | Control.IsVisible(60) | Control.IsVisible(500) | Control.IsVisible(501) | Control.IsVisible(502)">buttons/options-leftright.png</value>
        <value condition="Control.IsVisible(53) | Control.IsVisible(54) | Control.IsVisible(55) | Window.IsActive(weather)">buttons/options-updown.png</value>
        <value condition="Window.IsActive(script-NextAired-TVGuide.xml)">buttons/options-left.png</value>
        <value>buttons/options_nofo.png</value>
    </variable>
    
    <!-- Options Button -->
    <include name="Common-Options">
        <control type="group">
            <control type="button" id="9010">
                <onleft>50</onleft>
                <onright>50</onright>
                <onup>50</onup>
                <ondown>50</ondown>
                <texturefocus>-</texturefocus>
                <texturenofocus>-</texturenofocus>
                <onfocus>SetFocus(9111)</onfocus>
                <visible allowhiddenfocus="true">false</visible>
            </control>
        </control>
    </include>

    <!-- Shutdown Label -->
    <include name="Common-ShutdownLabel">
        <control type="group">
        </control>
    </include>

    <!-- Now Playing -->
    <variable name="NowPlayingTitle">
        <value condition="Player.HasVideo + !Pvr.IsPlayingTv">$INFO[VideoPlayer.Title]</value>
        <value condition="Player.HasVideo + Pvr.IsPlayingTv">$INFO[VideoPlayer.ChannelName,,: ]$INFO[VideoPlayer.Title]</value>
        <value>$INFO[MusicPlayer.Title]</value>
    </variable>
    
    <variable name="NowPlayingSubTitle">
        <value condition="Player.HasVideo + !Pvr.IsPlayingTv">$INFO[Player.FinishTime,$LOCALIZE[41371] ,]</value>
        <value condition="Player.HasVideo + Pvr.IsPlayingTv">$INFO[VideoPlayer.NextTitle,$LOCALIZE[19031]: ,]$INFO[VideoPlayer.NextStartTime, (,)]</value>
        <value condition="Player.HasAudio + !Pvr.IsPlayingRadio">$INFO[MusicPlayer.Artist]</value>
        <value condition="Player.HasAudio + Pvr.IsPlayingRadio">$INFO[MusicPlayer.ChannelName]</value>
    </variable>
    
    <variable name="NowPlayingColor">
    	<value condition="StringCompare(Skin.String(homescreen.style),simple) + Window.IsActive(home)">mod-infotags</value>
    	<value>Mod_Tags</value>
    </variable>
    <variable name="NowPlayingColorLight">
    	<value condition="StringCompare(Skin.String(homescreen.style),simple) + Window.IsActive(home)">mod-infotags-l</value>
    	<value>Mod_Tags_Light</value>
    </variable>
    
    <include name="Common-NowPlaying">
        <control type="group">
            <posx>1741</posx>
            <posy>26</posy>
            <include condition="![StringCompare(Skin.String(homescreen.style),simple) + Window.IsActive(home)]">BannerListInfoAnimation</include>
            <animation effect="slide" start="0" end="0,500" time="250" condition="StringCompare(Skin.String(homescreen.style),simple) + Window.IsActive(home)">WindowClose</animation>
        	<animation effect="slide" start="0" end="0,500" time="250" condition="StringCompare(Skin.String(homescreen.style),simple) + Window.IsActive(home)">Hidden</animation>
        	        	<animation effect="slide" end="0" start="0,500" time="250" condition="StringCompare(Skin.String(homescreen.style),simple)">WindowOpen</animation>
        	<animation effect="slide" end="0" start="0,500" time="250" condition="StringCompare(Skin.String(homescreen.style),simple)">Visible</animation>
            <visible>Player.HasMedia + IsEmpty(Window(videos).property(TvTunesIsAlive)) + !Window.IsActive(visualisation)</visible>
            <animation effect="slide" start="0" end="-200,900" time="0" condition="StringCompare(Skin.String(homescreen.style),simple) + Window.IsActive(home)">Conditional</animation>
            <animation effect="slide" start="0" end="-210" time="300" tween="sine" easing="inout" condition="StringCompare(Skin.String(homescreen.style),simple) + Window.IsActive(home) + Window.IsActive(volumebar)">Conditional</animation>
            <animation effect="slide" start="0" end="-65" time="300" tween="sine" easing="inout" condition="StringCompare(Skin.String(homescreen.style),simple) + Window.IsActive(home) + Window.IsActive(mutebug)">Conditional</animation>
            <animation effect="slide" start="0" end="-60" time="300" tween="sine" easing="inout" condition="StringCompare(Skin.String(homescreen.style),simple) + Window.IsActive(home) + [PVR.IsRecording | PVR.HasTimer]">Conditional</animation>



            <animation effect="slide" end="-76" time="300" tween="sine" easing="inout" condition="Window.IsActive(busydialog)">Conditional</animation>
            <animation type="Conditional" condition="![StringCompare(Skin.String(homescreen.style),simple) + Window.IsActive(home)] + [Window.IsActive(infodialog) | Window.IsActive(extendedprogressdialog) | Window.IsActive(volumebar)]">
                <effect type="fade" start="100" end="8" tween="sine" easing="out" time="300" />
                <effect type="zoom" start="100" end="50" center="1745,100" tween="sine" easing="inout" time="300" />
            </animation>
            <control type="group">
                <control type="label">
                    <description>Title label</description>
                    <posx>0</posx>
                    <posy>0</posy>
                    <width>771</width>
                    <height>120</height>
                    <label>$VAR[NowPlayingTitle]</label>
                    <font>Font-Alaska-S36-BL</font>
                    <textcolor>$VAR[NowPlayingColor]</textcolor>
                    <scroll>false</scroll>
                    <align>right</align>
                    <animation effect="slide" end="0,16" time="300" tween="sine" easing="inout" condition="IsEmpty(Control.GetLabel(934))">Conditional</animation>
                </control>
                <control type="label" id="934">
                    <description>Sub label</description>
                    <posx>0</posx>
                    <posy>32</posy>
                    <width>771</width>
                    <height>120</height>
                    <label>$VAR[NowPlayingSubTitle]</label>
                    <font>Font-Alaska-S28-L</font>
                    <textcolor>$VAR[NowPlayingColor]</textcolor>
                    <scroll>false</scroll>
                    <align>right</align>
                </control>
    			<control type="image">
    			    <description>Now Playing - Paused</description>
    			    <posx>0</posx>
    			    <posy>25</posy>
    			    <width>100</width>
    			    <height>100</height>
    			    <texture>overlays/nowplaying/pause.png</texture>
    			    <aspectratio align="center">keep</aspectratio>
    			    <animation type="Visible">
    			        <effect type="fade" start="0" end="100" tween="sine" easing="inout" time="300" />
    			        <effect type="zoom" start="50" end="100" center="50,77" tween="sine" easing="inout" time="300" />
    			    </animation>
    			    <animation type="Hidden">
    			        <effect type="fade" start="100" end="0" tween="sine" easing="inout" time="300" />
    			        <effect type="zoom" start="100" end="50" center="50,77" tween="sine" easing="inout" time="300" />
    			    </animation>
    			    <visible>Player.Paused</visible>
    			    <colordiffuse>$VAR[NowPlayingColor]</colordiffuse>
    			</control>
    			<control type="image">
    			    <description>Now Playing - Play</description>
    			    <posx>0</posx>
    			    <posy>25</posy>
    			    <width>100</width>
    			    <height>100</height>
    			    <texture>overlays/nowplaying/play.png</texture>
    			    <aspectratio align="center">keep</aspectratio>
    			    <animation type="Visible">
    			        <effect type="fade" start="0" end="100" tween="sine" easing="inout" time="300" />
    			        <effect type="zoom" start="50" end="100" center="50,77" tween="sine" easing="inout" time="300" />
    			    </animation>
    			    <animation type="Hidden">
    			        <effect type="fade" start="100" end="0" tween="sine" easing="inout" time="300" />
    			        <effect type="zoom" start="100" end="50" center="50,77" tween="sine" easing="inout" time="300" />
    			    </animation>
    			    <visible>!Player.Paused</visible>
    			    <colordiffuse>$VAR[NowPlayingColor]</colordiffuse>
    			</control>
    			<control type="image">
    			    <posx>0</posx>
    			    <posy>25</posy>
    			    <width>100</width>
    			    <height>100</height>
    			    <texture>dialogs/extendedprogress/loading-back.png</texture>
    			    <aspectratio align="center">keep</aspectratio>
    			</control>
    			<control type="progress" id="933">
    			    <texturebg>-</texturebg>
    				<lefttexture>-</lefttexture>
    				<midtexture>-</midtexture>
    				<righttexture>-</righttexture>
    				<info>Player.Progress</info>
    				<visible>false</visible>
    			</control>
    			<control type="image">
    			    <posx>0</posx>
    			    <posy>25</posy>
    			    <width>100</width>
    			    <height>100</height>
    			    <texture>$INFO[Control.GetLabel(933),overlays/nowplaying/progress/p,.png]</texture>
    			    <visible>!IsEmpty(Player.Duration)</visible>
    			    <aspectratio align="center">keep</aspectratio>
    			</control>
    			<control type="image">
    			    <description>Loading indicator</description>
    			    <posx>0</posx>
    			    <posy>25</posy>
    			    <width>100</width>
    			    <height>100</height>
    			    <texture>dialogs/search/loading.png</texture>
    			    <animation effect="rotate" center="auto" start="360" end="0" time="1500" loop="true" condition="!Player.Paused">Conditional</animation>
    			    <visible>IsEmpty(Player.Duration)</visible>
    			    <aspectratio align="center">keep</aspectratio>
    			</control>
            </control>
        </control>
    </include>

    <include name="Common-Home-Info">
		<control type="group">        
			<animation effect="slide" start="0" end="0,500" time="250" condition="StringCompare(Skin.String(homescreen.style),simple)">WindowClose</animation>
			<animation effect="slide" start="0" end="0,500" time="250" condition="StringCompare(Skin.String(homescreen.style),simple)">Hidden</animation>
			<include condition="![StringCompare(Skin.String(homescreen.style),simple) + Window.IsVisible(home)]">Common-Clock</include>
			<include condition="StringCompare(Skin.String(homescreen.style),simple) + Window.IsVisible(home)">SimpleHome-Clock</include>
		</control>
        <include>Common-NowPlaying</include>
    </include>
    
    <include name="Common-Info">
        <include>Common-ShutdownLabel</include>
        <include condition="!Skin.HasSetting(KioskMode)">Common-Options</include>
        <include>Common-Clock</include>
        <include>Common-NowPlaying</include>
    </include>
    
    <include name="Common-Info-NoOptions">
        <include>Common-ShutdownLabel</include>
        <include>Common-Clock</include>
        <include>Common-NowPlaying</include>
    </include>

</includes>